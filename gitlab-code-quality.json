[{"type":"issue","fingerprint":"58c212ba8feaa5e4725402a20ae62e57","check_name":"MethodCallRemoval","description":"Escaped Mutant for Mutator MethodCallRemoval","content":"--- Original\n+++ New\n@@ @@\n     #[Route(path: '\/api\/v1\/admin\/grand-author\/{userId}', methods: 'POST')]\n     public function grantAuthor(int $userId) : Response\n     {\n-        $this->roleService->grantAuthor($userId);\n+        \n         return new Response('', 201);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Controller\/AdminController.php","lines":{"begin":24}},"severity":"major"},{"type":"issue","fingerprint":"c2e4510992829c051982ed72fbb89ac1","check_name":"DecrementInteger","description":"Escaped Mutant for Mutator DecrementInteger","content":"--- Original\n+++ New\n@@ @@\n     public function grantAuthor(int $userId) : Response\n     {\n         $this->roleService->grantAuthor($userId);\n-        return new Response('', 201);\n+        return new Response('', 200);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Controller\/AdminController.php","lines":{"begin":26}},"severity":"major"},{"type":"issue","fingerprint":"f7164a215f448ac1333abefe2bf48556","check_name":"IncrementInteger","description":"Escaped Mutant for Mutator IncrementInteger","content":"--- Original\n+++ New\n@@ @@\n     public function grantAuthor(int $userId) : Response\n     {\n         $this->roleService->grantAuthor($userId);\n-        return new Response('', 201);\n+        return new Response('', 202);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Controller\/AdminController.php","lines":{"begin":26}},"severity":"major"},{"type":"issue","fingerprint":"b3c338b4eb8620258fc42ba7486d6cbf","check_name":"DecrementInteger","description":"Escaped Mutant for Mutator DecrementInteger","content":"--- Original\n+++ New\n@@ @@\n     #[Route(path: '\/api\/v1\/books\/review\/{id}', name: 'reviews', methods: 'GET|OPTIONS')]\n     public function reviews(int $id, Request $request) : Response\n     {\n-        return $this->json($this->reviewService->getReviewPageByBookId($id, $request->query->get(key: 'page', default: 1)));\n+        return $this->json($this->reviewService->getReviewPageByBookId($id, $request->query->get(key: 'page', default: 0)));\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Controller\/BookController.php","lines":{"begin":58}},"severity":"major"},{"type":"issue","fingerprint":"a09e8dc2480f583ba7e18659e59b50cc","check_name":"IncrementInteger","description":"Escaped Mutant for Mutator IncrementInteger","content":"--- Original\n+++ New\n@@ @@\n     #[Route(path: '\/api\/v1\/books\/review\/{id}', name: 'reviews', methods: 'GET|OPTIONS')]\n     public function reviews(int $id, Request $request) : Response\n     {\n-        return $this->json($this->reviewService->getReviewPageByBookId($id, $request->query->get(key: 'page', default: 1)));\n+        return $this->json($this->reviewService->getReviewPageByBookId($id, $request->query->get(key: 'page', default: 2)));\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Controller\/BookController.php","lines":{"begin":58}},"severity":"major"},{"type":"issue","fingerprint":"0060074646ba651595b8f9b4c392e995","check_name":"MethodCallRemoval","description":"Escaped Mutant for Mutator MethodCallRemoval","content":"--- Original\n+++ New\n@@ @@\n     #[Route(path: '\/api\/v1\/subscribes', name: 'subscribes', methods: 'POST')]\n     public function subscribe(#[MapRequestPayload] SubscriberRequest $subscriberRequest) : Response\n     {\n-        $this->subscriberService->subscribe($subscriberRequest);\n+        \n         return $this->json(new ErrorResponse(message: 'Subscriber has been created successfully!', details: 'Operation has been completed with no errors'), 201);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Controller\/SubscriberController.php","lines":{"begin":28}},"severity":"major"},{"type":"issue","fingerprint":"7577e3c425ba3de2148996dc1f7a03ef","check_name":"DecrementInteger","description":"Escaped Mutant for Mutator DecrementInteger","content":"--- Original\n+++ New\n@@ @@\n     public function subscribe(#[MapRequestPayload] SubscriberRequest $subscriberRequest) : Response\n     {\n         $this->subscriberService->subscribe($subscriberRequest);\n-        return $this->json(new ErrorResponse(message: 'Subscriber has been created successfully!', details: 'Operation has been completed with no errors'), 201);\n+        return $this->json(new ErrorResponse(message: 'Subscriber has been created successfully!', details: 'Operation has been completed with no errors'), 200);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Controller\/SubscriberController.php","lines":{"begin":33}},"severity":"major"},{"type":"issue","fingerprint":"d732a6e058e8a0c9b23a933cf4f732d0","check_name":"IncrementInteger","description":"Escaped Mutant for Mutator IncrementInteger","content":"--- Original\n+++ New\n@@ @@\n     public function subscribe(#[MapRequestPayload] SubscriberRequest $subscriberRequest) : Response\n     {\n         $this->subscriberService->subscribe($subscriberRequest);\n-        return $this->json(new ErrorResponse(message: 'Subscriber has been created successfully!', details: 'Operation has been completed with no errors'), 201);\n+        return $this->json(new ErrorResponse(message: 'Subscriber has been created successfully!', details: 'Operation has been completed with no errors'), 202);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Controller\/SubscriberController.php","lines":{"begin":33}},"severity":"major"},{"type":"issue","fingerprint":"bf7cfc5b8ae5bf3cadd507acb32bfb85","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n     {\n         return $this->user;\n     }\n-    public function setUser(UserInterface $user) : static\n+    protected function setUser(UserInterface $user) : static\n     {\n         $this->user = $user;\n         return $this;","categories":["Escaped Mutant"],"location":{"path":"src\/Entity\/RefreshToken.php","lines":{"begin":90}},"severity":"major"},{"type":"issue","fingerprint":"72eee41dc0f33bbec966f27d91fa885d","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n     #[ORM\\ManyToOne(targetEntity: Book::class, inversedBy: 'reviews')]\n     private Book $book;\n     #[ORM\\PrePersist]\n-    public function setCreatedAtValue() : void\n+    protected function setCreatedAtValue() : void\n     {\n         $this->createdAt = new DateTimeImmutable();\n     }","categories":["Escaped Mutant"],"location":{"path":"src\/Entity\/Review.php","lines":{"begin":35}},"severity":"major"},{"type":"issue","fingerprint":"a842e4a6fc06ce6cd87f6db8c7e7ef12","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n     public function eraseCredentials() : void\n     {\n     }\n-    public function getUsername() : string\n+    protected function getUsername() : string\n     {\n         return $this->email;\n     }","categories":["Escaped Mutant"],"location":{"path":"src\/Entity\/User.php","lines":{"begin":109}},"severity":"major"},{"type":"issue","fingerprint":"1e540a54bc629fadfce8688e78e15b84","check_name":"MethodCallRemoval","description":"Escaped Mutant for Mutator MethodCallRemoval","content":"--- Original\n+++ New\n@@ @@\n {\n     public function __construct(string $message = 'Book category not found')\n     {\n-        parent::__construct($message);\n+        \n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Exception\/BookCategoryNotFoundException.php","lines":{"begin":11}},"severity":"major"},{"type":"issue","fingerprint":"e742ded93cc5c96ec68a1cfc7687a36d","check_name":"DecrementInteger","description":"Escaped Mutant for Mutator DecrementInteger","content":"--- Original\n+++ New\n@@ @@\n {\n     public function __construct(string $message = 'Access Denied', Throwable $previous = null)\n     {\n-        parent::__construct($message, 0, $previous);\n+        parent::__construct($message, -1, $previous);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Exception\/RecommendationAccessDeniedException.php","lines":{"begin":12}},"severity":"major"},{"type":"issue","fingerprint":"a1994cec16523b98728487a4d8f977e2","check_name":"IncrementInteger","description":"Escaped Mutant for Mutator IncrementInteger","content":"--- Original\n+++ New\n@@ @@\n {\n     public function __construct(string $message = 'Access Denied', Throwable $previous = null)\n     {\n-        parent::__construct($message, 0, $previous);\n+        parent::__construct($message, 1, $previous);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Exception\/RecommendationAccessDeniedException.php","lines":{"begin":12}},"severity":"major"},{"type":"issue","fingerprint":"babd45c49a1d291130433bb5fb89eb16","check_name":"MethodCallRemoval","description":"Escaped Mutant for Mutator MethodCallRemoval","content":"--- Original\n+++ New\n@@ @@\n {\n     public function __construct(string $message = 'Access Denied', Throwable $previous = null)\n     {\n-        parent::__construct($message, 0, $previous);\n+        \n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Exception\/RecommendationAccessDeniedException.php","lines":{"begin":12}},"severity":"major"},{"type":"issue","fingerprint":"652e8f8492e1ae1ca940df047bc426c5","check_name":"DecrementInteger","description":"Escaped Mutant for Mutator DecrementInteger","content":"--- Original\n+++ New\n@@ @@\n {\n     public function __construct(string $message = '', Throwable $previous = null)\n     {\n-        parent::__construct($message, 0, $previous);\n+        parent::__construct($message, -1, $previous);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Exception\/RecommendationException.php","lines":{"begin":12}},"severity":"major"},{"type":"issue","fingerprint":"952db1e9899f890dc1cbae32902763fc","check_name":"IncrementInteger","description":"Escaped Mutant for Mutator IncrementInteger","content":"--- Original\n+++ New\n@@ @@\n {\n     public function __construct(string $message = '', Throwable $previous = null)\n     {\n-        parent::__construct($message, 0, $previous);\n+        parent::__construct($message, 1, $previous);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Exception\/RecommendationException.php","lines":{"begin":12}},"severity":"major"},{"type":"issue","fingerprint":"a51662701e787afc55b8e01b7b8aefc8","check_name":"MethodCallRemoval","description":"Escaped Mutant for Mutator MethodCallRemoval","content":"--- Original\n+++ New\n@@ @@\n {\n     public function __construct(string $message = '', Throwable $previous = null)\n     {\n-        parent::__construct($message, 0, $previous);\n+        \n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Exception\/RecommendationException.php","lines":{"begin":12}},"severity":"major"},{"type":"issue","fingerprint":"595690797ad4bf8f193b48239256240e","check_name":"MethodCallRemoval","description":"Escaped Mutant for Mutator MethodCallRemoval","content":"--- Original\n+++ New\n@@ @@\n {\n     public function __construct(string $message = '', Throwable $throwable = null)\n     {\n-        parent::__construct($message, $throwable);\n+        \n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Exception\/RecommendationRequestException.php","lines":{"begin":11}},"severity":"major"},{"type":"issue","fingerprint":"318af4c445bf83b00781c44e46a9e7a1","check_name":"MethodCallRemoval","description":"Escaped Mutant for Mutator MethodCallRemoval","content":"--- Original\n+++ New\n@@ @@\n {\n     public function __construct(string $message = 'Subscriber already exist!')\n     {\n-        parent::__construct($message);\n+        \n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Exception\/SubscriberFoundException.php","lines":{"begin":11}},"severity":"major"},{"type":"issue","fingerprint":"9cb85a2174c3b9efd1efe778d2f6a3bd","check_name":"MethodCallRemoval","description":"Escaped Mutant for Mutator MethodCallRemoval","content":"--- Original\n+++ New\n@@ @@\n {\n     public function __construct(string $message = 'User already exist')\n     {\n-        parent::__construct($message);\n+        \n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Exception\/UserAlreadyExistException.php","lines":{"begin":11}},"severity":"major"},{"type":"issue","fingerprint":"baf7dfe3257d4c68bae0dce5a9becbff","check_name":"GreaterThanOrEqualTo","description":"Escaped Mutant for Mutator GreaterThanOrEqualTo","content":"--- Original\n+++ New\n@@ @@\n         if (!$mapping) {\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n-        if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n+        if ($mapping->getCode() > Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n             $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":42}},"severity":"major"},{"type":"issue","fingerprint":"a46f448d8bedf6c9b4ea04e7567416f7","check_name":"GreaterThanOrEqualToNegotiation","description":"Escaped Mutant for Mutator GreaterThanOrEqualToNegotiation","content":"--- Original\n+++ New\n@@ @@\n         if (!$mapping) {\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n-        if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n+        if ($mapping->getCode() < Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n             $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":42}},"severity":"major"},{"type":"issue","fingerprint":"7cc2ae8f06fe42ee1a2fa8fd24b2d964","check_name":"LogicalOr","description":"Escaped Mutant for Mutator LogicalOr","content":"--- Original\n+++ New\n@@ @@\n         if (!$mapping) {\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n-        if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n+        if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR && $mapping->isLoggable()) {\n             $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":42}},"severity":"major"},{"type":"issue","fingerprint":"b474262a3264a2f19cff883071cd7deb","check_name":"LogicalOrAllSubExprNegation","description":"Escaped Mutant for Mutator LogicalOrAllSubExprNegation","content":"--- Original\n+++ New\n@@ @@\n         if (!$mapping) {\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n-        if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n+        if (!($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR) || !$mapping->isLoggable()) {\n             $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":42}},"severity":"major"},{"type":"issue","fingerprint":"f3118dab2b053fd9ba55c074b31cfcf2","check_name":"LogicalOrNegation","description":"Escaped Mutant for Mutator LogicalOrNegation","content":"--- Original\n+++ New\n@@ @@\n         if (!$mapping) {\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n-        if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n+        if (!($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable())) {\n             $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":42}},"severity":"major"},{"type":"issue","fingerprint":"e117d077a695ed785965cac4c73831a0","check_name":"LogicalOrSingleSubExprNegation","description":"Escaped Mutant for Mutator LogicalOrSingleSubExprNegation","content":"--- Original\n+++ New\n@@ @@\n         if (!$mapping) {\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n-        if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n+        if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || !$mapping->isLoggable()) {\n             $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":42}},"severity":"major"},{"type":"issue","fingerprint":"7a61696833bd77fa256f76f330872a0e","check_name":"MethodCallRemoval","description":"Escaped Mutant for Mutator MethodCallRemoval","content":"--- Original\n+++ New\n@@ @@\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n         if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n-            $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n+            \n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();\n         $details = $this->isDebug && !$mapping->isLoggable() ? new ErrorDebugDetails($throwable->getTraceAsString()) : null;","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":43}},"severity":"major"},{"type":"issue","fingerprint":"694ed8f327df3e1e0aceca83e36bedf4","check_name":"ArrayItemRemoval","description":"Escaped Mutant for Mutator ArrayItemRemoval","content":"--- Original\n+++ New\n@@ @@\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n         if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n-            $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n+            $this->logger->error($throwable->getMessage(), ['previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();\n         $details = $this->isDebug && !$mapping->isLoggable() ? new ErrorDebugDetails($throwable->getTraceAsString()) : null;","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":45}},"severity":"major"},{"type":"issue","fingerprint":"1fc66c3e1196ff39d74f70b4642d7cd7","check_name":"ArrayItem","description":"Escaped Mutant for Mutator ArrayItem","content":"--- Original\n+++ New\n@@ @@\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n         if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n-            $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n+            $this->logger->error($throwable->getMessage(), ['trace' > $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();\n         $details = $this->isDebug && !$mapping->isLoggable() ? new ErrorDebugDetails($throwable->getTraceAsString()) : null;","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":46}},"severity":"major"},{"type":"issue","fingerprint":"dc8f0185a71f8cf0bd70c8db1e7392c9","check_name":"NotIdentical","description":"Escaped Mutant for Mutator NotIdentical","content":"--- Original\n+++ New\n@@ @@\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n         if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n-            $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n+            $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null === $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();\n         $details = $this->isDebug && !$mapping->isLoggable() ? new ErrorDebugDetails($throwable->getTraceAsString()) : null;","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":47}},"severity":"major"},{"type":"issue","fingerprint":"2c1dd9257ffe3b788c5c10ecfff51c38","check_name":"Ternary","description":"Escaped Mutant for Mutator Ternary","content":"--- Original\n+++ New\n@@ @@\n             $mapping = new ExceptionMapping(code: Response::HTTP_INTERNAL_SERVER_ERROR, hidden: true, loggable: false);\n         }\n         if ($mapping->getCode() >= Response::HTTP_INTERNAL_SERVER_ERROR || $mapping->isLoggable()) {\n-            $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n+            $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? '' : $throwable->getPrevious()->getMessage()]);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();\n         $details = $this->isDebug && !$mapping->isLoggable() ? new ErrorDebugDetails($throwable->getTraceAsString()) : null;","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":47}},"severity":"major"},{"type":"issue","fingerprint":"481653e7b36e247b8235f35fcb02943d","check_name":"LogicalAndAllSubExprNegation","description":"Escaped Mutant for Mutator LogicalAndAllSubExprNegation","content":"--- Original\n+++ New\n@@ @@\n             $this->logger->error($throwable->getMessage(), ['trace' => $throwable->getTraceAsString(), 'previous' => null !== $throwable->getPrevious() ? $throwable->getPrevious()->getMessage() : '']);\n         }\n         $message = $mapping->isHidden() ? Response::$statusTexts[$mapping->getCode()] : $throwable->getMessage();\n-        $details = $this->isDebug && !$mapping->isLoggable() ? new ErrorDebugDetails($throwable->getTraceAsString()) : null;\n+        $details = !$this->isDebug && $mapping->isLoggable() ? new ErrorDebugDetails($throwable->getTraceAsString()) : null;\n         $data = $this->serializer->serialize(data: new ErrorResponse($message, $details), format: JsonEncoder::FORMAT);\n         $exceptionEvent->setResponse(new JsonResponse(data: $data, status: $mapping->getCode(), json: true));\n     }","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":53}},"severity":"major"},{"type":"issue","fingerprint":"2583402330c3349b3f50fbbe119fbb9d","check_name":"InstanceOf_","description":"Escaped Mutant for Mutator InstanceOf_","content":"--- Original\n+++ New\n@@ @@\n     }\n     private function isSecurityException(Throwable $throwable) : bool\n     {\n-        return $throwable instanceof AuthenticationException;\n+        return false;\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Listener\/ApiExceptionListener.php","lines":{"begin":62}},"severity":"major"},{"type":"issue","fingerprint":"c855e7f78c4984cbf09c157a8bb03e05","check_name":"MBString","description":"Escaped Mutant for Mutator MBString","content":"--- Original\n+++ New\n@@ @@\n     public static function mapRecommendations(Book $book) : RecommendedBook\n     {\n         $description = (string) $book->getDescription();\n-        $description = mb_strlen($description) > 150 ? mb_substr($description, 0, 150) . '...' : $description;\n+        $description = strlen($description) > 150 ? mb_substr($description, 0, 150) . '...' : $description;\n         return (new RecommendedBook())->setId($book->getId())->setTitle($book->getTitle())->setSlug($book->getSlug())->setDescription($description);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Mapper\/BookMapper.php","lines":{"begin":28}},"severity":"major"},{"type":"issue","fingerprint":"715c6f5b8d788dd550dd0332171a50c7","check_name":"GreaterThan","description":"Escaped Mutant for Mutator GreaterThan","content":"--- Original\n+++ New\n@@ @@\n     public static function mapRecommendations(Book $book) : RecommendedBook\n     {\n         $description = (string) $book->getDescription();\n-        $description = mb_strlen($description) > 150 ? mb_substr($description, 0, 150) . '...' : $description;\n+        $description = mb_strlen($description) >= 150 ? mb_substr($description, 0, 150) . '...' : $description;\n         return (new RecommendedBook())->setId($book->getId())->setTitle($book->getTitle())->setSlug($book->getSlug())->setDescription($description);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Mapper\/BookMapper.php","lines":{"begin":28}},"severity":"major"},{"type":"issue","fingerprint":"3fb140062972ef756abbbe524bdd9d8c","check_name":"MBString","description":"Escaped Mutant for Mutator MBString","content":"--- Original\n+++ New\n@@ @@\n     public static function mapRecommendations(Book $book) : RecommendedBook\n     {\n         $description = (string) $book->getDescription();\n-        $description = mb_strlen($description) > 150 ? mb_substr($description, 0, 150) . '...' : $description;\n+        $description = mb_strlen($description) > 150 ? substr($description, 0, 150) . '...' : $description;\n         return (new RecommendedBook())->setId($book->getId())->setTitle($book->getTitle())->setSlug($book->getSlug())->setDescription($description);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Mapper\/BookMapper.php","lines":{"begin":28}},"severity":"major"},{"type":"issue","fingerprint":"82a3f50607b4a0d6925df9a815cc3f6b","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n     public function __construct(public int $id, public string $title, public string $slug)\n     {\n     }\n-    public function getId() : int\n+    protected function getId() : int\n     {\n         return $this->id;\n     }","categories":["Escaped Mutant"],"location":{"path":"src\/Model\/BookCategoryListItem.php","lines":{"begin":14}},"severity":"major"},{"type":"issue","fingerprint":"df15dbf30ea7b6f5edc8af58be48230e","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n     {\n         return $this->id;\n     }\n-    public function getTitle() : string\n+    protected function getTitle() : string\n     {\n         return $this->title;\n     }","categories":["Escaped Mutant"],"location":{"path":"src\/Model\/BookCategoryListItem.php","lines":{"begin":19}},"severity":"major"},{"type":"issue","fingerprint":"854220882958c825246e496facbbaf7c","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n     {\n         return $this->title;\n     }\n-    public function getSlug() : string\n+    protected function getSlug() : string\n     {\n         return $this->slug;\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Model\/BookCategoryListItem.php","lines":{"begin":24}},"severity":"major"},{"type":"issue","fingerprint":"91fcbfe74b4a36a11029f703bed892ab","check_name":"OneZeroFloat","description":"Escaped Mutant for Mutator OneZeroFloat","content":"--- Original\n+++ New\n@@ @@\n         \/** @var string[] *\/\n         private array $authors,\n         private string $publicationDate,\n-        private float $rating = 0.0,\n+        private float $rating = 1.0,\n         private int $review = 0,\n         \/** @var BookCategoryListItem[] *\/\n         private array $categories = [],","categories":["Escaped Mutant"],"location":{"path":"src\/Model\/BookDetails.php","lines":{"begin":15}},"severity":"major"},{"type":"issue","fingerprint":"bb7075db8b382207a0bcb24e6dcd1a9c","check_name":"DecrementInteger","description":"Escaped Mutant for Mutator DecrementInteger","content":"--- Original\n+++ New\n@@ @@\n         private array $authors,\n         private string $publicationDate,\n         private float $rating = 0.0,\n-        private int $review = 0,\n+        private int $review = -1,\n         \/** @var BookCategoryListItem[] *\/\n         private array $categories = [],\n         \/** @var BookFormatListItem[] *\/","categories":["Escaped Mutant"],"location":{"path":"src\/Model\/BookDetails.php","lines":{"begin":16}},"severity":"major"},{"type":"issue","fingerprint":"f6779d9b3036eb119068af052418f042","check_name":"IncrementInteger","description":"Escaped Mutant for Mutator IncrementInteger","content":"--- Original\n+++ New\n@@ @@\n         private array $authors,\n         private string $publicationDate,\n         private float $rating = 0.0,\n-        private int $review = 0,\n+        private int $review = 1,\n         \/** @var BookCategoryListItem[] *\/\n         private array $categories = [],\n         \/** @var BookFormatListItem[] *\/","categories":["Escaped Mutant"],"location":{"path":"src\/Model\/BookDetails.php","lines":{"begin":16}},"severity":"major"},{"type":"issue","fingerprint":"f921744f109c4929393c810a27db6b19","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n     private string $title;\n     private string $slug;\n     private string $description;\n-    public function getId() : int\n+    protected function getId() : int\n     {\n         return $this->id;\n     }","categories":["Escaped Mutant"],"location":{"path":"src\/Model\/RecommendedBook.php","lines":{"begin":12}},"severity":"major"},{"type":"issue","fingerprint":"b4f42d019b825e197061350f04d82617","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n         $this->id = $id;\n         return $this;\n     }\n-    public function getTitle() : string\n+    protected function getTitle() : string\n     {\n         return $this->title;\n     }","categories":["Escaped Mutant"],"location":{"path":"src\/Model\/RecommendedBook.php","lines":{"begin":24}},"severity":"major"},{"type":"issue","fingerprint":"b09b1f483e70b6fa85fbaee4d8c1fc3c","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n         $this->title = $title;\n         return $this;\n     }\n-    public function getSlug() : string\n+    protected function getSlug() : string\n     {\n         return $this->slug;\n     }","categories":["Escaped Mutant"],"location":{"path":"src\/Model\/RecommendedBook.php","lines":{"begin":36}},"severity":"major"},{"type":"issue","fingerprint":"0b4d183100da82b091cc66ffba52d222","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n         $this->slug = $slug;\n         return $this;\n     }\n-    public function getDescription() : string\n+    protected function getDescription() : string\n     {\n         return $this->description;\n     }","categories":["Escaped Mutant"],"location":{"path":"src\/Model\/RecommendedBook.php","lines":{"begin":48}},"severity":"major"},{"type":"issue","fingerprint":"9d50733138687daac3e14b17dca35e99","check_name":"ArrayItemRemoval","description":"Escaped Mutant for Mutator ArrayItemRemoval","content":"--- Original\n+++ New\n@@ @@\n      *\/\n     public function findBooksByIds(array $ids) : array\n     {\n-        return $this->findBy(['id' => $ids]);\n+        return $this->findBy([]);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Repository\/BookRepository.php","lines":{"begin":42}},"severity":"major"},{"type":"issue","fingerprint":"244f5cd264fe3eb5baeb299fdf02b5b3","check_name":"CastInt","description":"Escaped Mutant for Mutator CastInt","content":"--- Original\n+++ New\n@@ @@\n      *\/\n     public function getBookTotalRatingSum(int $id) : int\n     {\n-        return (int) $this->getEntityManager()->createQuery(dql: 'SELECT SUM(r.rating) FROM App\\\\Entity\\\\Review r WHERE r.book = :id')->setParameter(key: 'id', value: $id)->getSingleScalarResult();\n+        return $this->getEntityManager()->createQuery(dql: 'SELECT SUM(r.rating) FROM App\\\\Entity\\\\Review r WHERE r.book = :id')->setParameter(key: 'id', value: $id)->getSingleScalarResult();\n     }\n     public function getPageByBookId(int $id, int $offset, int $limit) : Countable&Traversable\n     {","categories":["Escaped Mutant"],"location":{"path":"src\/Repository\/ReviewRepository.php","lines":{"begin":35}},"severity":"major"},{"type":"issue","fingerprint":"1e5be5ac49faa1e79031039528f7c3ca","check_name":"FalseValue","description":"Escaped Mutant for Mutator FalseValue","content":"--- Original\n+++ New\n@@ @@\n     public function getPageByBookId(int $id, int $offset, int $limit) : Countable&Traversable\n     {\n         $query = $this->getEntityManager()->createQuery(dql: 'SELECT r FROM App\\\\Entity\\\\Review r WHERE r.book = :id ORDER BY r.createdAt DESC ')->setParameter(key: 'id', value: $id)->setFirstResult($offset)->setMaxResults($limit);\n-        return new Paginator(query: $query, fetchJoinCollection: false);\n+        return new Paginator(query: $query, fetchJoinCollection: true);\n     }\n     public function countByBook(int $id) : int\n     {","categories":["Escaped Mutant"],"location":{"path":"src\/Repository\/ReviewRepository.php","lines":{"begin":46}},"severity":"major"},{"type":"issue","fingerprint":"887415d2c1978d065081ddb9461ccbcf","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n         $query = $this->getEntityManager()->createQuery(dql: 'SELECT r FROM App\\\\Entity\\\\Review r WHERE r.book = :id ORDER BY r.createdAt DESC ')->setParameter(key: 'id', value: $id)->setFirstResult($offset)->setMaxResults($limit);\n         return new Paginator(query: $query, fetchJoinCollection: false);\n     }\n-    public function countByBook(int $id) : int\n+    protected function countByBook(int $id) : int\n     {\n         return $this->count(['book' => $id]);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Repository\/ReviewRepository.php","lines":{"begin":49}},"severity":"major"},{"type":"issue","fingerprint":"68ee1618814e964fa276bb5a2e34608a","check_name":"ArrayItemRemoval","description":"Escaped Mutant for Mutator ArrayItemRemoval","content":"--- Original\n+++ New\n@@ @@\n     }\n     public function countByBook(int $id) : int\n     {\n-        return $this->count(['book' => $id]);\n+        return $this->count([]);\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Repository\/ReviewRepository.php","lines":{"begin":51}},"severity":"major"},{"type":"issue","fingerprint":"b91f831207f90461c9dd95164c830c7b","check_name":"Coalesce","description":"Escaped Mutant for Mutator Coalesce","content":"--- Original\n+++ New\n@@ @@\n             if (empty($mapping['code'])) {\n                 throw new InvalidArgumentException(sprintf('Code is mandatory for class %s', $classKey));\n             }\n-            $this->addMapping(class: $classKey, code: $mapping['code'], hidden: $mapping['hidden'] ?? false, loggable: $mapping['loggable'] ?? false);\n+            $this->addMapping(class: $classKey, code: $mapping['code'], hidden: false ?? $mapping['hidden'], loggable: $mapping['loggable'] ?? false);\n         }\n     }\n     public function resolve(string $throwableClass) : ?ExceptionMapping","categories":["Escaped Mutant"],"location":{"path":"src\/Service\/ExceptionHandler\/ExceptionMappingResolver.php","lines":{"begin":25}},"severity":"major"},{"type":"issue","fingerprint":"6e73c04ceb4e2e513800daf9d7f9501d","check_name":"Break_","description":"Escaped Mutant for Mutator Break_","content":"--- Original\n+++ New\n@@ @@\n         foreach ($this->mappings as $classKey => $mapping) {\n             if ($throwableClass === $classKey || is_subclass_of($throwableClass, $classKey)) {\n                 $foundMapping = $mapping;\n-                break;\n+                continue;\n             }\n         }\n         return $foundMapping;","categories":["Escaped Mutant"],"location":{"path":"src\/Service\/ExceptionHandler\/ExceptionMappingResolver.php","lines":{"begin":38}},"severity":"major"},{"type":"issue","fingerprint":"4160a227df80f3275b687fd5181486cc","check_name":"InstanceOf_","description":"Escaped Mutant for Mutator InstanceOf_","content":"--- Original\n+++ New\n@@ @@\n             return $this->serializer->deserialize(data: $response->getContent(), type: RecommendationResponse::class, format: JsonEncoder::FORMAT);\n         } catch (Throwable $exception) {\n             $statusCode = $exception->getCode();\n-            if ($exception instanceof ClientException && Response::HTTP_FORBIDDEN === $statusCode) {\n+            if (true && Response::HTTP_FORBIDDEN === $statusCode) {\n                 throw new RecommendationAccessDeniedException();\n             }\n             throw new RecommendationRequestException($exception->getMessage(), $exception);","categories":["Escaped Mutant"],"location":{"path":"src\/Service\/Recommendation\/RecommendationService.php","lines":{"begin":40}},"severity":"major"},{"type":"issue","fingerprint":"3478c20f58e9e29e8149725b9e93e07f","check_name":"LogicalAnd","description":"Escaped Mutant for Mutator LogicalAnd","content":"--- Original\n+++ New\n@@ @@\n             return $this->serializer->deserialize(data: $response->getContent(), type: RecommendationResponse::class, format: JsonEncoder::FORMAT);\n         } catch (Throwable $exception) {\n             $statusCode = $exception->getCode();\n-            if ($exception instanceof ClientException && Response::HTTP_FORBIDDEN === $statusCode) {\n+            if ($exception instanceof ClientException || Response::HTTP_FORBIDDEN === $statusCode) {\n                 throw new RecommendationAccessDeniedException();\n             }\n             throw new RecommendationRequestException($exception->getMessage(), $exception);","categories":["Escaped Mutant"],"location":{"path":"src\/Service\/Recommendation\/RecommendationService.php","lines":{"begin":40}},"severity":"major"},{"type":"issue","fingerprint":"33c0b2834a39b4b0239e67b2ae5c82f2","check_name":"IncrementInteger","description":"Escaped Mutant for Mutator IncrementInteger","content":"--- Original\n+++ New\n@@ @@\n      *\/\n     public function getReviewPageByBookId(int $id, int $page) : ReviewPage\n     {\n-        $offset = max($page - 1, 0) * self::PAGE_LIMIT;\n+        $offset = max($page - 2, 0) * self::PAGE_LIMIT;\n         $paginator = $this->reviewRepository->getPageByBookId(id: $id, offset: $offset, limit: self::PAGE_LIMIT);\n         $total = count($paginator);\n         $items = [];","categories":["Escaped Mutant"],"location":{"path":"src\/Service\/ReviewService.php","lines":{"begin":30}},"severity":"major"},{"type":"issue","fingerprint":"f8300110d9769f8c2b721b8d977cb859","check_name":"Multiplication","description":"Escaped Mutant for Mutator Multiplication","content":"--- Original\n+++ New\n@@ @@\n      *\/\n     public function getReviewPageByBookId(int $id, int $page) : ReviewPage\n     {\n-        $offset = max($page - 1, 0) * self::PAGE_LIMIT;\n+        $offset = max($page - 1, 0) \/ self::PAGE_LIMIT;\n         $paginator = $this->reviewRepository->getPageByBookId(id: $id, offset: $offset, limit: self::PAGE_LIMIT);\n         $total = count($paginator);\n         $items = [];","categories":["Escaped Mutant"],"location":{"path":"src\/Service\/ReviewService.php","lines":{"begin":30}},"severity":"major"},{"type":"issue","fingerprint":"929538b16bcea61319189bada85f2374","check_name":"CastInt","description":"Escaped Mutant for Mutator CastInt","content":"--- Original\n+++ New\n@@ @@\n         foreach ($paginator as $item) {\n             $items[] = $this->map($item);\n         }\n-        return (new ReviewPage())->setRating($this->ratingService->calcReview($id, $total))->setTotal($total)->setPage($page)->setPerPage(self::PAGE_LIMIT)->setPages((int) ceil($total \/ self::PAGE_LIMIT))->setItems($items);\n+        return (new ReviewPage())->setRating($this->ratingService->calcReview($id, $total))->setTotal($total)->setPage($page)->setPerPage(self::PAGE_LIMIT)->setPages(ceil($total \/ self::PAGE_LIMIT))->setItems($items);\n     }\n     public function map(Review $review) : ReviewModel\n     {","categories":["Escaped Mutant"],"location":{"path":"src\/Service\/ReviewService.php","lines":{"begin":44}},"severity":"major"},{"type":"issue","fingerprint":"21bc1a24dac49535a5ffeb4fe2c4b2f2","check_name":"PublicVisibility","description":"Escaped Mutant for Mutator PublicVisibility","content":"--- Original\n+++ New\n@@ @@\n         }\n         return (new ReviewPage())->setRating($this->ratingService->calcReview($id, $total))->setTotal($total)->setPage($page)->setPerPage(self::PAGE_LIMIT)->setPages((int) ceil($total \/ self::PAGE_LIMIT))->setItems($items);\n     }\n-    public function map(Review $review) : ReviewModel\n+    protected function map(Review $review) : ReviewModel\n     {\n         return (new ReviewModel())->setId($review->getId())->setRating($review->getRating())->setCreatedAt($review->getCreatedAt()->format(DATE_ATOM))->setAuthor($review->getAuthor())->setContent($review->getContent());\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Service\/ReviewService.php","lines":{"begin":49}},"severity":"major"},{"type":"issue","fingerprint":"ba9bab1c9e32d97f820110f33ecfd789","check_name":"MethodCallRemoval","description":"Escaped Mutant for Mutator MethodCallRemoval","content":"--- Original\n+++ New\n@@ @@\n     {\n         $user = $this->userRepository->getUser($userId);\n         $user->setRoles([$role]);\n-        $this->entityManager->persist($user);\n+        \n         $this->entityManager->flush();\n     }\n }","categories":["Escaped Mutant"],"location":{"path":"src\/Service\/RoleService.php","lines":{"begin":31}},"severity":"major"}]